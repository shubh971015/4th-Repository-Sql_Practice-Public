SQL Practice Exercises



****DAY 1: Basic SQL Operations
Insert a New Employee
Write an SQL query to insert a new record into the "EMPLOYEE" table with the following details:

    INSERT INTO EMPLOYEE (NAME, DEPARTMENT, SALARY)
    VALUES ('Alex', 'Finance', 60000);
  
Update Product Price
Write an SQL query to update the "PRICE" column of the "PRODUCT" table to 150 for all products where the "CATEGORY_ID" is 2.

    UPDATE PRODUCT
    SET PRICE = 150
    WHERE CATEGORY_ID = 2;

Delete Orders with Specific Status
Write an SQL query to delete all records from the "ORDERS" table where the "STATUS" is "PENDING".
    DELETE FROM ORDERS
    WHERE STATUS = 'PENDING';


****DAY 2: Filtering and Sorting Data
Find High-Salary Employees

Write an SQL query to select all employees from the "EMPLOYEES" table with a salary greater than 60,000 and order them by salary in descending order.
    SELECT * FROM EMPLOYEES
    WHERE SALARY > 60000
    ORDER BY SALARY DESC;

Filter Electronics Products Under a Specific Price
Write an SQL query to select all products from the "PRODUCT" table where the "CATEGORY" is 'Electronics' and the "PRICE" is less than 500.
    SELECT * FROM PRODUCT
    WHERE CATEGORY = 'Electronics' AND PRICE < 500;

Count Orders by Status
Write an SQL query to count the number of orders in the "ORDERS" table for each "STATUS".
    SELECT STATUS, COUNT(*) AS TOTAL_ORDERS
    FROM ORDERS
    GROUP BY STATUS;

****DAY 3: Joining Tables
Customer and Order Information
Write an SQL query to retrieve the customer name and total amount from the "CUSTOMER" and "ORDER_DETAILS" tables, respectively, 
for all orders with a total amount greater than 150.

    SELECT C.CUSTOMER_NAME, O.TOTAL_AMOUNT
    FROM CUSTOMER AS C
    JOIN ORDER_DETAILS AS O
    ON C.CUSTOMER_ID = O.CUSTOMER_ID
    WHERE O.TOTAL_AMOUNT > 150;

    Product, Category, and Supplier Details
    Write an SQL query to retrieve the product name, category name, and supplier name from the "PRODUCT", "CATEGORY", and "SUPPLIER" tables.
    SELECT P.PRODUCT_NAME, C.CATEGORY_NAME, S.SUPPLIER_NAME
    FROM PRODUCT AS P
    JOIN CATEGORY AS C ON P.CATEGORY_ID = C.CATEGORY_ID
    JOIN SUPPLIER AS S ON P.SUPPLIER_ID = S.SUPPLIER_ID;

****DAY 4: Aggregating Data
Average Salary by Department
Write an SQL query to find the average salary of employees for each department.
    SELECT D.DEPARTMENT_NAME, AVG(E.SALARY) AS AVG_SALARY
    FROM EMPLOYEE AS E
    JOIN DEPARTMENT AS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
    GROUP BY D.DEPARTMENT_NAME;



Total Revenue per Customer
Write an SQL query to calculate the total revenue generated by each customer in the "ORDER_DETAILS" table.
    SELECT CUSTOMER_ID, SUM(TOTAL_AMOUNT) AS TOTAL_REVENUE
    FROM ORDER_DETAILS
    GROUP BY CUSTOMER_ID;
